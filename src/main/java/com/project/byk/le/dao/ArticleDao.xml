<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.byk.le.dao.ArticleDao">
	<select id="getArticlesCount" resultType="int">
		SELECT COUNT(*)
		FROM
		article AS A
		WHERE boardId = #{boardId}
		AND
		displayStatus
		= '1'
		AND delStatus
		= '0'
		<choose>
			<when test="searchType == 'title'">
				AND A.title LIKE CONCAT('%',#{searchKeyword},'%')
			</when>
			<when test="searchType == 'body'">
				AND A.body LIKE CONCAT('%',#{searchKeyword},'%')
			</when>
			<when test="searchType == 'titleAndBody'">
				AND (A.title LIKE CONCAT('%',#{searchKeyword},'%') OR
				A.body LIKE CONCAT('%',#{searchKeyword},'%'))
			</when>
		</choose>
	</select>

	<select id="getArticlesByParam" resultMap="article">
		SELECT A.*, M.nickname
		AS extra__writer
		FROM article AS A
		INNER JOIN
		`member` AS M
		ON A.memberId
		= M.id
		WHERE boardId = #{boardId}
		AND
		displayStatus = '1'
		AND
		A.delStatus
		=
		'0'
		<choose>
			<when test="searchType == 'title'">
				AND A.title LIKE CONCAT('%',#{searchKeyword},'%')
			</when>
			<when test="searchType == 'body'">
				AND A.body LIKE CONCAT('%',#{searchKeyword},'%')
			</when>
			<when test="searchType == 'titleAndBody'">
				AND (A.title LIKE CONCAT('%',#{searchKeyword},'%') OR
				A.body LIKE CONCAT('%',#{searchKeyword},'%'))
			</when>
		</choose>
		ORDER BY id DESC
		<if test="limitCount != null">
			LIMIT #{limitFrom}, #{limitCount}
		</if>
	</select>

	<insert id="write" useGeneratedKeys="true" keyProperty="id">
		INSERT
		INTO article
		SET regDate = NOW(),
		updateDate = NOW(),
		displayStatus = 1,
		title = #{title},
		body = #{body},
		boardId = #{boardId},
		memberId =
		#{memberId}
	</insert>

	<select id="getArticleById" resultMap="article">
		SELECT A.*, M.nickname AS
		extra__writer
		FROM article AS A
		INNER JOIN `member` AS M
		ON A.memberId =
		M.id
		WHERE A.id = #{id}
	</select>

	<select id="getArticleByBoradId" resultMap="article">
		SELECT A.*,
		M.nickname AS
		extra__writer
		FROM article AS A
		INNER JOIN `member` AS M
		ON
		A.memberId =
		M.id
		WHERE A.boardId = #{boardId}
		AND
		displayStatus = '1'
		AND
		A.delStatus
		=
		'0'
		ORDER BY id DESC
	</select>

	<update id="deleteArticle">
		UPDATE article
		SET delDate = NOW(),
		displayStatus = 0,
		delStatus = 1
		WHERE id = #{id}
	</update>

	<update id="doArticleModify">
		UPDATE article
		SET updateDate = NOW(),
		title =
		#{title},
		body = #{body}
		WHERE id = #{id}
	</update>

	<select id="getBoardByCode" resultType="Board">
		SELECT *
		FROM
		board
		WHERE
		`code` = #{code}
	</select>



	<resultMap type="Article" id="article">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="updateDate" column="updateDate" />
		<id property="title" column="title" />
		<id property="body" column="body" />
		<id property="memberId" column="memberId" />
		<id property="boardId" column="boardId" />
		<id property="boardCode" column="boardCode" />
		<id property="delStatus" column="delStatus" />
		<association property="extra" javaType="Map">
			<id property="writer" column="extra__writer" />
		</association>
	</resultMap>
</mapper>